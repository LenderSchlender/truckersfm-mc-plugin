plugins {
    id 'com.gradleup.shadow' version '9.0.0-beta4'
    id 'java'
    id('xyz.jpenilla.run-paper') version '2.3.1'
}

group = 'fm.truckers'
version = '0.6.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://repo.codemc.org/repository/maven-public/"
    }
    maven {
        name "essentialsx-releases"
        url "https://repo.essentialsx.net/releases/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.3-R0.1-SNAPSHOT")
    compileOnly "dev.jorel:commandapi-bukkit-core:9.7.0"
    compileOnly 'net.essentialsx:EssentialsX:2.20.1'
    implementation 'org.json:json:+'
    implementation "dev.jorel:commandapi-bukkit-shade:9.7.0"
}

shadowJar {
    relocate("dev.jorel.commandapi", "fm.truckers.commandapi")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion('1.21.4')

        downloadPlugins {
            // Install the CommandAPI plugin on the server.
            modrinth("commandapi", "9.7.0")
            // Install the EssentialsX plugin on the server.
            modrinth("essentialsx", "2.20.1")
        }
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
